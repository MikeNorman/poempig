<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Poem Recommender</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Georgia', serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }
        
        .header h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .search-container {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
        }
        
        .search-tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid #eee;
        }
        
        .tab {
            padding: 15px 25px;
            cursor: pointer;
            border: none;
            background: none;
            font-size: 1.1rem;
            color: #666;
            transition: all 0.3s ease;
        }
        
        .tab.active {
            color: #667eea;
            border-bottom: 3px solid #667eea;
            font-weight: bold;
        }
        
        .tab:hover {
            color: #667eea;
            background: #f8f9ff;
        }
        
        .search-form {
            display: none;
        }
        
        .search-form.active {
            display: block;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #555;
        }
        
        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        
        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        .search-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: transform 0.2s ease;
            width: 100%;
        }
        
        .search-btn:hover {
            transform: translateY(-2px);
        }
        
        .search-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        
        .results {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
        }
        
        .results h2 {
            margin-bottom: 20px;
            color: #333;
        }
        
        .poem-card {
            border: 1px solid #eee;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .poem-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .poem-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
        }
        
        .poem-author {
            color: #666;
            font-style: italic;
            margin-bottom: 15px;
        }
        
        .poem-text {
            white-space: pre-line;
            line-height: 1.8;
            color: #444;
            margin-bottom: 15px;
        }
        
        .poem-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.9rem;
            color: #888;
        }
        
        .similarity-score {
            background: #667eea;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: bold;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }
        
        .error {
            background: #ffe6e6;
            color: #d00;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid #d00;
        }
        
        .no-results {
            text-align: center;
            padding: 40px;
            color: #666;
            font-style: italic;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .search-container, .results {
                padding: 20px;
            }
            
            .search-tabs {
                flex-direction: column;
            }
            
            .tab {
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>📚 Poem Recommender</h1>
            <p>Discover beautiful poems through intelligent recommendations</p>
        </div>
        
        <div class="search-container">
            <div class="search-tabs">
                <button class="tab active" onclick="showTab('search')">Search Poems</button>
                <button class="tab" onclick="showTab('theme')">By Theme</button>
                <button class="tab" onclick="showTab('mood')">By Mood</button>
                <button class="tab" onclick="showTab('author')">By Author</button>
            </div>
            
            <!-- Search Tab -->
            <div id="search-form" class="search-form active">
                <form onsubmit="searchPoems(event)">
                    <div class="form-group">
                        <label for="search-query">Search for poems:</label>
                        <textarea id="search-query" placeholder="Enter any text to find similar poems..."></textarea>
                    </div>
                    <div class="form-group">
                        <label for="search-top-k">Number of results:</label>
                        <select id="search-top-k">
                            <option value="5">5 poems</option>
                            <option value="10">10 poems</option>
                            <option value="15">15 poems</option>
                        </select>
                    </div>
                    <button type="submit" class="search-btn">Search Poems</button>
                </form>
            </div>
            
            <!-- Theme Tab -->
            <div id="theme-form" class="search-form">
                <form onsubmit="searchByTheme(event)">
                    <div class="form-group">
                        <label for="theme-query">Theme:</label>
                        <input type="text" id="theme-query" placeholder="e.g., love, nature, death, time...">
                    </div>
                    <div class="form-group">
                        <label for="theme-top-k">Number of results:</label>
                        <select id="theme-top-k">
                            <option value="5">5 poems</option>
                            <option value="10">10 poems</option>
                            <option value="15">15 poems</option>
                        </select>
                    </div>
                    <button type="submit" class="search-btn">Find Poems by Theme</button>
                </form>
            </div>
            
            <!-- Mood Tab -->
            <div id="mood-form" class="search-form">
                <form onsubmit="searchByMood(event)">
                    <div class="form-group">
                        <label for="mood-query">Mood:</label>
                        <select id="mood-query">
                            <option value="">Select a mood...</option>
                            <option value="happy">Happy</option>
                            <option value="sad">Sad</option>
                            <option value="romantic">Romantic</option>
                            <option value="mysterious">Mysterious</option>
                            <option value="peaceful">Peaceful</option>
                            <option value="energetic">Energetic</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="mood-top-k">Number of results:</label>
                        <select id="mood-top-k">
                            <option value="5">5 poems</option>
                            <option value="10">10 poems</option>
                            <option value="15">15 poems</option>
                        </select>
                    </div>
                    <button type="submit" class="search-btn">Find Poems by Mood</button>
                </form>
            </div>
            
            <!-- Author Tab -->
            <div id="author-form" class="search-form">
                <form onsubmit="searchByAuthor(event)">
                    <div class="form-group">
                        <label for="author-query">Author name:</label>
                        <input type="text" id="author-query" placeholder="e.g., Robert Frost, Emily Dickinson...">
                    </div>
                    <div class="form-group">
                        <label for="author-top-k">Number of results:</label>
                        <select id="author-top-k">
                            <option value="5">5 poems</option>
                            <option value="10">10 poems</option>
                            <option value="15">15 poems</option>
                        </select>
                    </div>
                    <button type="submit" class="search-btn">Find Poems by Author</button>
                </form>
            </div>
        </div>
        
        <div id="results" class="results" style="display: none;">
            <h2 id="results-title">Search Results</h2>
            <div id="results-content"></div>
        </div>
    </div>
    
    <script>
        function showTab(tabName) {
            // Hide all forms
            document.querySelectorAll('.search-form').forEach(form => {
                form.classList.remove('active');
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Show selected form and activate tab
            document.getElementById(tabName + '-form').classList.add('active');
            event.target.classList.add('active');
        }
        
        function showLoading() {
            const resultsDiv = document.getElementById('results');
            const contentDiv = document.getElementById('results-content');
            
            resultsDiv.style.display = 'block';
            contentDiv.innerHTML = '<div class="loading">🔍 Searching for poems...</div>';
        }
        
        function showError(message) {
            const resultsDiv = document.getElementById('results');
            const contentDiv = document.getElementById('results-content');
            
            resultsDiv.style.display = 'block';
            contentDiv.innerHTML = `<div class="error">❌ ${message}</div>`;
        }
        
        function showResults(results, title) {
            const resultsDiv = document.getElementById('results');
            const contentDiv = document.getElementById('results-content');
            const titleDiv = document.getElementById('results-title');
            
            resultsDiv.style.display = 'block';
            titleDiv.textContent = title;
            
            if (results.length === 0) {
                contentDiv.innerHTML = '<div class="no-results">No poems found. Try a different search.</div>';
                return;
            }
            
            let html = '';
            results.forEach((result, index) => {
                const poem = result.poem || result;
                const similarity = result.similarity ? (result.similarity * 100).toFixed(1) + '%' : '';
                
                html += `
                    <div class="poem-card">
                        <div class="poem-title">${poem.title || 'Untitled'}</div>
                        <div class="poem-author">by ${poem.author || 'Unknown'}</div>
                        <div class="poem-text">${poem.text}</div>
                        <div class="poem-meta">
                            <span>Lines: ${poem.lines_count || 'N/A'}</span>
                            ${similarity ? `<span class="similarity-score">${similarity} match</span>` : ''}
                        </div>
                    </div>
                `;
            });
            
            contentDiv.innerHTML = html;
        }
        
        async function makeRequest(url, data) {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Request failed');
                }
                
                return await response.json();
            } catch (error) {
                throw error;
            }
        }
        
        async function searchPoems(event) {
            event.preventDefault();
            showLoading();
            
            const query = document.getElementById('search-query').value.trim();
            const topK = parseInt(document.getElementById('search-top-k').value);
            
            if (!query) {
                showError('Please enter a search query');
                return;
            }
            
            try {
                const result = await makeRequest('/search', {
                    query: query,
                    top_k: topK
                });
                
                showResults(result.results, `Search Results for "${query}"`);
            } catch (error) {
                showError(error.message);
            }
        }
        
        async function searchByTheme(event) {
            event.preventDefault();
            showLoading();
            
            const theme = document.getElementById('theme-query').value.trim();
            const topK = parseInt(document.getElementById('theme-top-k').value);
            
            if (!theme) {
                showError('Please enter a theme');
                return;
            }
            
            try {
                const result = await makeRequest('/recommend/theme', {
                    theme: theme,
                    top_k: topK
                });
                
                showResults(result.results, `Poems about "${theme}"`);
            } catch (error) {
                showError(error.message);
            }
        }
        
        async function searchByMood(event) {
            event.preventDefault();
            showLoading();
            
            const mood = document.getElementById('mood-query').value;
            const topK = parseInt(document.getElementById('mood-top-k').value);
            
            if (!mood) {
                showError('Please select a mood');
                return;
            }
            
            try {
                const result = await makeRequest('/recommend/mood', {
                    mood: mood,
                    top_k: topK
                });
                
                showResults(result.results, `${mood.charAt(0).toUpperCase() + mood.slice(1)} Poems`);
            } catch (error) {
                showError(error.message);
            }
        }
        
        async function searchByAuthor(event) {
            event.preventDefault();
            showLoading();
            
            const author = document.getElementById('author-query').value.trim();
            const topK = parseInt(document.getElementById('author-top-k').value);
            
            if (!author) {
                showError('Please enter an author name');
                return;
            }
            
            try {
                const result = await makeRequest('/recommend/author', {
                    author: author,
                    top_k: topK
                });
                
                showResults(result.results, `Poems by ${author}`);
            } catch (error) {
                showError(error.message);
            }
        }
    </script>
</body>
</html>
